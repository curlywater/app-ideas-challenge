{"version":3,"sources":["projects/BorderRadiusPreviewer/Components/BorderRadiusInput.js","projects/BorderRadiusPreviewer/Components/BorderRadiusSettings.js","projects/BorderRadiusPreviewer/Components/Output.js","projects/BorderRadiusPreviewer/App.js"],"names":["InputGroup","styled","div","_templateObject","BorderRadiusInput","_ref","label","name","radius","baseWidth","onChange","value","useMemo","match","unit","changeRadiusValue","useCallback","e","target","concat","changeUnitValue","react_default","a","createElement","type","min","tabIndex","BorderRadiusSettingRow","borderRadius","hName","vName","horizontalRadius","verticalRadius","changeBorderRadius","_ref2","Object","assign","[object Object]","formattedName","replace","toLowerCase","sectionStyle","css","BorderRadiusSettings_templateObject","core_browser_esm","Components_BorderRadiusInput","BorderRadiusSettings","_ref3","_templateObject2","map","BorderRadiusSettings_BorderRadiusSettingRow","key","Wrapper","Output_templateObject","CopyButton","button","Output_templateObject2","_templateObject3","Output","codeRef","useRef","Output_InputGroup","readOnly","_templateObject4","ref","onClick","console","log","codeEl","current","select","setSelectionRange","document","execCommand","App_templateObject","Previewer","App_templateObject2","size","width","height","BorderRadiusPreviewer","_useState","useState","topLeftH","topLeftV","topRightH","topRightV","bottomRightV","bottomRightH","bottomLeftH","bottomLeftV","_useState2","slicedToArray","setBorderRadius","previewerSize","outputBorderRadius","join","App_Wrapper","styles","App_templateObject3"],"mappings":"odAGA,IAAMA,EAAaC,IAAOC,IAAVC,KAgEDC,EAhDW,SAAAC,GAAkD,IAA/CC,EAA+CD,EAA/CC,MAAOC,EAAwCF,EAAxCE,KAAMC,EAAkCH,EAAlCG,OAAQC,EAA0BJ,EAA1BI,UAAWC,EAAeL,EAAfK,SACrDC,EAAQC,kBAAQ,WACpB,IAAMC,EAAQL,EAAOK,MAAM,gBAC3B,OAAY,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAQ,KAAM,GACpB,CAACL,IAEEM,EAAOF,kBAAQ,WACnB,IAAMC,EAAQL,EAAOK,MAAM,gBAE3B,OAAY,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAQ,KAAM,MACpB,CAACL,IAEEO,EAAoBC,sBACxB,SAACC,GAAM,IACGN,EAAUM,EAAEC,OAAZP,MACRD,EAAS,CACPH,OACAI,MAAK,GAAAQ,OAAKR,GAALQ,OAAaL,MAGtB,CAACP,EAAMO,EAAMJ,IAETU,EAAkBJ,sBACtB,SAACC,GAAM,IACUH,EAASG,EAAEC,OAAlBP,MAERD,EAAS,CACPH,OACAI,MAAK,GAAAQ,OACM,OAATL,EAAiBH,EAAQF,EAAa,IAAOE,EAAQF,EAAa,KAD/DU,OAEFL,MAGP,CAACP,EAAMI,EAAOF,EAAWC,IAG3B,OACEW,EAAAC,EAAAC,cAACvB,EAAD,KACEqB,EAAAC,EAAAC,cAAA,aAAQjB,GACRe,EAAAC,EAAAC,cAAA,SAAOC,KAAK,SAASC,IAAI,IAAId,MAAOA,EAAOD,SAAUK,IACrDM,EAAAC,EAAAC,cAAA,UAAQZ,MAAOG,EAAMJ,SAAUU,EAAiBM,SAAS,MACvDL,EAAAC,EAAAC,cAAA,UAAQZ,MAAM,MAAd,MACAU,EAAAC,EAAAC,cAAA,UAAQZ,MAAM,KAAd,mUCxDR,IAAMgB,EAAyB,SAAAtB,GAKzB,IAJJE,EAIIF,EAJJE,KACAqB,EAGIvB,EAHJuB,aACAnB,EAEIJ,EAFJI,UACAC,EACIL,EADJK,SAEMmB,EAAK,GAAAV,OAAMZ,EAAN,KACLuB,EAAK,GAAAX,OAAMZ,EAAN,KACLwB,EAAmBH,EAAaC,GAChCG,EAAiBJ,EAAaE,GAE9BG,EAAqBjB,sBACzB,SAAAkB,GAAqB,IAAlB3B,EAAkB2B,EAAlB3B,KAAMI,EAAYuB,EAAZvB,MACPD,EACEyB,OAAOC,OAAO,GAAIR,EAAc,CAC9BS,CAAC9B,GAAOI,MAId,CAACiB,EAAclB,IAEX4B,EAAgB1B,kBAAQ,WAC5B,OAAOL,EAAKgC,QAAQ,+BAAgC,SAASC,eAC5D,CAACjC,IACEkC,EAAeC,YAAHC,KAGlB,OACER,OAAAS,EAAA,EAAAT,CAAA,eACEA,OAAAS,EAAA,EAAAT,CAAA,oBAAAhB,OAAemB,EAAf,YACAH,OAAAS,EAAA,EAAAT,CAAA,WAASO,IAAKD,GACZN,OAAAS,EAAA,EAAAT,CAACU,EAAD,CACEvC,MAAM,oBACNC,KAAMsB,EACNrB,OAAQuB,EACRtB,UAAWA,EACXC,SAAUuB,KAIdE,OAAAS,EAAA,EAAAT,CAAA,WAASO,IAAKD,GACZN,OAAAS,EAAA,EAAAT,CAACU,EAAD,CACEvC,MAAM,kBACNC,KAAMuB,EACNtB,OAAQwB,EACRvB,UAAWA,EACXC,SAAUuB,OAOLa,EAAA,SAAAC,GAA2C,IAAxCtC,EAAwCsC,EAAxCtC,UAAWmB,EAA6BmB,EAA7BnB,aAAclB,EAAeqC,EAAfrC,SACzC,OACEyB,OAAAS,EAAA,EAAAT,CAAA,OACEO,IAAKA,YAAFM,MAOF,CAAC,UAAW,WAAY,aAAc,eAAeC,IAAI,SAAC1C,GAAD,OACxD4B,OAAAS,EAAA,EAAAT,CAACe,EAAD,CACEC,IAAK5C,EACLA,KAAMA,EACNE,UAAWA,EACXmB,aAAcA,EACdlB,SAAUA,6yBCrEpB,IAAM0C,EAAUnD,IAAOC,IAAVmD,KASPC,EAAarD,IAAOsD,OAAVC,KAcVxD,EAAaC,IAAOC,IAAVuD,KAID,SAASC,EAATrD,GAAkC,IAAhBuB,EAAgBvB,EAAhBuB,aACzB+B,EAAUC,iBAAO,MACvB,OACEzB,OAAAS,EAAA,EAAAT,CAACiB,EAAD,KACEjB,OAAAS,EAAA,EAAAT,CAAA,gCACAA,OAAAS,EAAA,EAAAT,CAAC0B,EAAD,KACE1B,OAAAS,EAAA,EAAAT,CAAA,SACE2B,UAAQ,EACRpB,IAAKA,YAAFqB,KAMHC,IAAKL,EACLhD,MAAOiB,IAETO,OAAAS,EAAA,EAAAT,CAACmB,EAAD,CACEW,QAAS,WACPC,QAAQC,IAAI,IACZ,IAAMC,EAAST,EAAQU,QACvBD,EAAOE,SACPF,EAAOG,kBAAkB,EAAG,OAC5BC,SAASC,YAAY,UANzB,2hCCzCR,IAAMrB,EAAUnD,IAAOC,IAAVwE,KAIPC,EAAY1E,IAAOC,IAAV0E,IACJ,SAAAvE,GAAA,OAAAA,EAAGwE,KAAgBC,OAClB,SAAA5C,GAAA,OAAAA,EAAG2C,KAAgBE,QAKZ,SAAAhC,GAAA,OAAAA,EAAGnB,eAGP,SAASoD,IAAwB,IAAAC,EACNC,mBAAS,CAC/CC,SAAU,IACVC,SAAU,IACVC,UAAW,IACXC,UAAW,IACXC,aAAc,IACdC,aAAc,IACdC,YAAa,IACbC,YAAa,MAT+BC,EAAAxD,OAAAyD,EAAA,EAAAzD,CAAA8C,EAAA,GACvCrD,EADuC+D,EAAA,GACzBE,EADyBF,EAAA,GAWxCG,EAAgBlF,kBAAQ,iBAAO,CACnCkE,MAAO,IACPC,OAAQ,MACN,IACEgB,EAAqBnF,kBAAQ,WAAM,IAErCuE,EAQEvD,EARFuD,SACAC,EAOExD,EAPFwD,SACAC,EAMEzD,EANFyD,UACAC,EAKE1D,EALF0D,UACAE,EAIE5D,EAJF4D,aACAD,EAGE3D,EAHF2D,aACAE,EAEE7D,EAFF6D,YACAC,EACE9D,EADF8D,YAEF,MACE,CAACP,EAAUE,EAAWG,EAAcC,GAAaO,KAAK,KACtD,MACA,CAACZ,EAAUE,EAAWC,EAAcG,GAAaM,KAAK,MAEvD,CAACpE,IACJ,OACEO,OAAAS,EAAA,EAAAT,CAAC8D,EAAD,KACE9D,OAAAS,EAAA,EAAAT,CAACS,EAAA,EAAD,CACEsD,OAAQxD,YAAFyD,OAwBRhE,OAAAS,EAAA,EAAAT,CAACwC,EAAD,CACE/C,aAAcmE,EACdlB,KAAMiB,IAER3D,OAAAS,EAAA,EAAAT,CAACW,EAAD,CACElB,aAAcA,EACdnB,UAAWqF,EAAchB,MACzBpE,SAAUmF,IAEZ1D,OAAAS,EAAA,EAAAT,CAACuB,EAAD,CAAQ9B,aAAcmE","file":"static/js/5.bdf8532f.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\nimport React, { useMemo, useCallback } from \"react\";\n\nconst InputGroup = styled.div`\n  label {\n    margin-right: 1rem;\n  }\n  input {\n    width: 4em;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n  select {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    padding-left: 0;\n  }\n`;\n\nconst BorderRadiusInput = ({ label, name, radius, baseWidth, onChange }) => {\n  const value = useMemo(() => {\n    const match = radius.match(/(\\d*)(px|%)$/);\n    return match?.[1] || 0;\n  }, [radius]);\n\n  const unit = useMemo(() => {\n    const match = radius.match(/(\\d*)(px|%)$/);\n\n    return match?.[2] || \"px\";\n  }, [radius]);\n\n  const changeRadiusValue = useCallback(\n    (e) => {\n      const { value } = e.target;\n      onChange({\n        name,\n        value: `${value}${unit}`,\n      });\n    },\n    [name, unit, onChange]\n  );\n  const changeUnitValue = useCallback(\n    (e) => {\n      const { value: unit } = e.target;\n\n      onChange({\n        name,\n        value: `${\n          unit === \"px\" ? (value * baseWidth) / 100 : (value / baseWidth) * 100\n        }${unit}`,\n      });\n    },\n    [name, value, baseWidth, onChange]\n  );\n\n  return (\n    <InputGroup>\n      <label>{label}</label>\n      <input type=\"number\" min=\"0\" value={value} onChange={changeRadiusValue} />\n      <select value={unit} onChange={changeUnitValue} tabIndex=\"-1\">\n        <option value=\"px\">px</option>\n        <option value=\"%\">%</option>\n      </select>\n    </InputGroup>\n  );\n};\n\nexport default BorderRadiusInput;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useMemo, useCallback } from \"react\";\nimport BorderRadiusInput from \"./BorderRadiusInput\";\n\nconst BorderRadiusSettingRow = ({\n  name,\n  borderRadius,\n  baseWidth,\n  onChange,\n}) => {\n  const hName = `${name}H`;\n  const vName = `${name}V`;\n  const horizontalRadius = borderRadius[hName];\n  const verticalRadius = borderRadius[vName];\n\n  const changeBorderRadius = useCallback(\n    ({ name, value }) => {\n      onChange(\n        Object.assign({}, borderRadius, {\n          [name]: value,\n        })\n      );\n    },\n    [borderRadius, onChange]\n  );\n  const formattedName = useMemo(() => {\n    return name.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, \"$1-$2\").toLowerCase();\n  }, [name]);\n  const sectionStyle = css`\n    margin-bottom: 1rem;\n  `;\n  return (\n    <article>\n      <h3>{`border-${formattedName}-radius`}</h3>\n      <section css={sectionStyle}>\n        <BorderRadiusInput\n          label=\"Horizontal Radius\"\n          name={hName}\n          radius={horizontalRadius}\n          baseWidth={baseWidth}\n          onChange={changeBorderRadius}\n        />\n      </section>\n\n      <section css={sectionStyle}>\n        <BorderRadiusInput\n          label=\"Vertical Radius\"\n          name={vName}\n          radius={verticalRadius}\n          baseWidth={baseWidth}\n          onChange={changeBorderRadius}\n        />\n      </section>\n    </article>\n  );\n};\n\nexport default ({ baseWidth, borderRadius, onChange }) => {\n  return (\n    <div\n      css={css`\n        display: grid;\n        grid-template-columns: repeat(2, auto);\n        justify-content: center;\n        grid-column-gap: 4rem;\n      `}\n    >\n      {[\"topLeft\", \"topRight\", \"bottomLeft\", \"bottomRight\"].map((name) => (\n        <BorderRadiusSettingRow\n          key={name}\n          name={name}\n          baseWidth={baseWidth}\n          borderRadius={borderRadius}\n          onChange={onChange}\n        />\n      ))}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useRef } from \"react\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  label {\n    margin-right: 1rem;\n  }\n`;\nconst CopyButton = styled.button`\n  border: none;\n  padding: 0.5em 0.625em;\n  text-transform: uppercase;\n  border-radius: 0 2px 2px 0;\n  cursor: pointer;\n  background: #f09;\n  color: #fff;\n  font-weight: bold;\n  &:hover {\n    background: #3023ae;\n  }\n`;\n\nconst InputGroup = styled.div`\n  display: flex;\n`;\n\nexport default function Output({ borderRadius }) {\n  const codeRef = useRef(null);\n  return (\n    <Wrapper>\n      <label>border-radius: </label>\n      <InputGroup>\n        <input\n          readOnly\n          css={css`\n            color: #002;\n            background: #ccc;\n            padding: 0.5em 0.625em;\n            border-radius: 2px 0 0 2px;\n          `}\n          ref={codeRef}\n          value={borderRadius}\n        ></input>\n        <CopyButton\n          onClick={() => {\n            console.log(\"\");\n            const codeEl = codeRef.current;\n            codeEl.select();\n            codeEl.setSelectionRange(0, 99999);\n            document.execCommand(\"copy\");\n          }}\n        >\n          COPY\n        </CopyButton>\n      </InputGroup>\n    </Wrapper>\n  );\n}\n","/** @jsx jsx */\nimport { Global, jsx, css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useState, useMemo } from \"react\";\n\nimport BorderRadiusSettings from \"./Components/BorderRadiusSettings\";\nimport Output from \"./Components/Output\";\n\nconst Wrapper = styled.div`\n  padding: 2rem;\n`;\n\nconst Previewer = styled.div`\n  width: ${({ size }) => size.width}px;\n  height: ${({ size }) => size.height}px;\n  background: linear-gradient(#cc45c6, #141b6c);\n  background-clip: padding-box;\n  border: 2px dashed #999;\n  margin: 0 auto;\n  border-radius: ${({ borderRadius }) => borderRadius};\n`;\n\nexport default function BorderRadiusPreviewer() {\n  const [borderRadius, setBorderRadius] = useState({\n    topLeftH: \"0\",\n    topLeftV: \"0\",\n    topRightH: \"0\",\n    topRightV: \"0\",\n    bottomRightV: \"0\",\n    bottomRightH: \"0\",\n    bottomLeftH: \"0\",\n    bottomLeftV: \"0\",\n  });\n  const previewerSize = useMemo(() => ({\n    width: 360,\n    height: 360,\n  }), [])\n  const outputBorderRadius = useMemo(() => {\n    const {\n      topLeftH,\n      topLeftV,\n      topRightH,\n      topRightV,\n      bottomRightH,\n      bottomRightV,\n      bottomLeftH,\n      bottomLeftV,\n    } = borderRadius;\n    return (\n      [topLeftH, topRightH, bottomRightH, bottomLeftH].join(\" \") +\n      \" / \" +\n      [topLeftV, topRightV, bottomRightV, bottomLeftV].join(\" \")\n    );\n  }, [borderRadius]);\n  return (\n    <Wrapper>\n      <Global\n        styles={css`\n          * {\n            box-sizing: border-box;\n          }\n\n          body {\n            font-family: \"Source Sans Pro\", \"Helvetica Neue\", Arial, sans-serif;\n            background: #333;\n            color: #fff;\n          }\n          input,\n          select {\n            padding: 0.5em 0.625em;\n            border-radius: 2px;\n            border: none;\n            outline: none;\n            background: #fff;\n            color: #002;\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n          }\n        `}\n      />\n      <Previewer\n        borderRadius={outputBorderRadius}\n        size={previewerSize}\n      ></Previewer>\n      <BorderRadiusSettings\n        borderRadius={borderRadius}\n        baseWidth={previewerSize.width}\n        onChange={setBorderRadius}\n      />\n      <Output borderRadius={outputBorderRadius} />\n    </Wrapper>\n  );\n}\n"],"sourceRoot":""}